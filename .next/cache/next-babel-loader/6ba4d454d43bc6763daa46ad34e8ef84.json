{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\interview\\\\interview-fullstack-master\\\\components\\\\MatrixTable\\\\context.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createContext, useReducer } from 'react';\n/**\n * This is the \n */\n\nvar emptyMatrix = {\n  \"36months\": {\n    \"lite\": 0,\n    \"standard\": 0,\n    \"unlimited\": 0\n  },\n  \"24months\": {\n    \"lite\": 0,\n    \"standard\": 0,\n    \"unlimited\": 0\n  },\n  \"12months\": {\n    \"lite\": 0,\n    \"standard\": 0,\n    \"unlimited\": 0\n  },\n  \"mtm\": {\n    \"lite\": 0,\n    \"standard\": 0,\n    \"unlimited\": 0\n  }\n};\nvar defaultState = {\n  matrix: emptyMatrix,\n  originalMatrix: emptyMatrix\n};\n\nvar reducer = function reducer(state, action) {\n  console.log('---action: ', action);\n\n  switch (action.type) {\n    case 'GET_ALL_DATA':\n      fetch('http://localhost:3000/api/pricing', {\n        method: 'Get',\n        headers: {\n          accept: 'application/json',\n          'content-type': 'application/json'\n        } // body: JSON.stringify(\"dfdfd\")\n\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        console.log('-----data: ', data);\n        state = data;\n      })[\"catch\"](function (err) {\n        return console.log('---error', err);\n      });\n      console.log('---hree');\n      return data;\n\n    case 'SET_MATRIX':\n      return _objectSpread({}, state);\n\n    case 'SET_ORIGINAL_MATRIX':\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n};\n\nexport var MatrixTableContext = createContext([defaultState, function () {}]);\n/**\n * This is the provider that hosts the state\n * @param param0 \n */\n\nexport var MatrixTableContextProvider = function MatrixTableContextProvider(_ref) {\n  _s();\n\n  var initialMatrix = _ref.initialMatrix,\n      children = _ref.children;\n  var state = useReducer(reducer, {\n    matrix: initialMatrix || emptyMatrix,\n    originalMatrix: initialMatrix || emptyMatrix\n  });\n  return __jsx(MatrixTableContext.Provider, {\n    value: state,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_s(MatrixTableContextProvider, \"Z3G2CrHQvAFidmS+kdGEoh0tzZs=\");\n\n_c = MatrixTableContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MatrixTableContextProvider\");","map":{"version":3,"sources":["D:/interview/interview-fullstack-master/components/MatrixTable/context.tsx"],"names":["createContext","useReducer","emptyMatrix","defaultState","matrix","originalMatrix","reducer","state","action","console","log","type","fetch","method","headers","accept","then","res","json","data","err","MatrixTableContext","MatrixTableContextProvider","initialMatrix","children"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAAoD,OAApD;AAEA;;;;AAsDA,IAAMC,WAAW,GAAG;AAClB,cAAY;AACR,YAAQ,CADA;AAER,gBAAY,CAFJ;AAGR,iBAAa;AAHL,GADM;AAMlB,cAAY;AACR,YAAQ,CADA;AAER,gBAAY,CAFJ;AAGR,iBAAa;AAHL,GANM;AAWlB,cAAY;AACR,YAAQ,CADA;AAER,gBAAY,CAFJ;AAGR,iBAAa;AAHL,GAXM;AAgBlB,SAAO;AACH,YAAQ,CADL;AAEH,gBAAY,CAFT;AAGH,iBAAa;AAHV;AAhBW,CAApB;AAuBA,IAAMC,YAA8B,GAAG;AACrCC,EAAAA,MAAM,EAAEF,WAD6B;AAErCG,EAAAA,cAAc,EAAEH;AAFqB,CAAvC;;AAKA,IAAMI,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAA0BC,MAA1B,EAAqE;AACnFC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,MAA3B;;AACA,UAAOA,MAAM,CAACG,IAAd;AACE,SAAK,cAAL;AACEC,MAAAA,KAAK,CAAC,mCAAD,EAAsC;AAC3CC,QAAAA,MAAM,EAAE,KADmC;AAE3CC,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE,kBADH;AAEL,0BAAgB;AAFX,SAFkC,CAMzC;;AANyC,OAAtC,CAAL,CAQCC,IARD,CAQM,UAAAC,GAAG;AAAA,eACPA,GAAG,CAACC,IAAJ,EADO;AAAA,OART,EAWCF,IAXD,CAWM,UAAAG,IAAI,EAAG;AACXV,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BS,IAA3B;AACAZ,QAAAA,KAAK,GAAGY,IAAR;AACD,OAdD,WAeO,UAAAC,GAAG;AAAA,eAAIX,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBU,GAAxB,CAAJ;AAAA,OAfV;AAgBAX,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAOS,IAAP;;AACF,SAAK,YAAL;AACE,+BACKZ,KADL;;AAGF,SAAK,qBAAL;AACE,+BACKA,KADL;;AAGF;AACE,aAAOA,KAAP;AA7BJ;AA+BD,CAjCD;;AAmCA,OAAO,IAAMc,kBAAkB,GAAGrB,aAAa,CAA6D,CAACG,YAAD,EAAe,YAAM,CAAE,CAAvB,CAA7D,CAAxC;AAEP;;;;;AAIA,OAAO,IAAMmB,0BAA6D,GAAG,SAAhEA,0BAAgE,OAAiC;AAAA;;AAAA,MAA9BC,aAA8B,QAA9BA,aAA8B;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC5G,MAAMjB,KAAK,GAAGN,UAAU,CAACK,OAAD,EAAU;AAAEF,IAAAA,MAAM,EAAEmB,aAAa,IAAIrB,WAA3B;AAAwCG,IAAAA,cAAc,EAAEkB,aAAa,IAAIrB;AAAzE,GAAV,CAAxB;AAEA,SACE,MAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEK,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGiB,QADH,CADF;AAKD,CARM;;GAAMF,0B;;KAAAA,0B","sourcesContent":["import { createContext, useReducer, useState } from 'react'\n\n/**\n * This is the \n */\ninterface MatrixTableState {\n  /**\n   * This is the price matrix that contains the latest value\n   */\n  matrix: import('../../types').Matrix\n  /**\n   * We will use original matrix to help us \"reset\" the table when we want to cancel editing it.\n   * Remember that **whenever** you get the matrix from the server, you must set originalMatrix\n   * to that value; originalMatrix should try to mirror the matrix in our database.\n   */\n  originalMatrix: import('../../types').Matrix\n}\n\n/**\n * These are the actions you can dispatch. Add actions you want to help you\n * type the dispatch function\n */\ntype MatrixAction = {\n  type: 'SET_MATRIX',\n  /**\n   * When payload is empty, we will need to set the values from originalMatrix\n   */ \n  payload?: import('../../types').Matrix\n  metadata?: {\n    /**\n     * If this is set to true, then instead of resetting to the originalMatrix,\n     * we reset to the emptyMatrix\n     */\n    resetToEmpty?: boolean\n  }\n} | {\n  type: 'SET_ORIGINAL_MATRIX',\n  /**\n   * When empty, set the value from emptyMatrix\n   */\n  payload?: import('../../types').Matrix\n} | {\n  type: 'SOME_ACTION',\n  payload: any\n} | {\n  type: 'GET_ALL_DATA',\n  payload: any\n}// Here you will need to add your other action(s) in order to edit the pricing (remove SOME_ACTION)\n\n/**\n * This is for the Provider component\n */\ntype ProviderProps = {\n  initialMatrix?: import('../../types').Matrix\n}\n\nconst emptyMatrix = {\n  \"36months\": {\n      \"lite\": 0,\n      \"standard\": 0,\n      \"unlimited\": 0,\n  },\n  \"24months\": {\n      \"lite\": 0,\n      \"standard\": 0,\n      \"unlimited\": 0\n  },\n  \"12months\": {\n      \"lite\": 0,\n      \"standard\": 0,\n      \"unlimited\": 0\n  },\n  \"mtm\": {\n      \"lite\": 0,\n      \"standard\": 0,\n      \"unlimited\": 0\n  }\n}\n\nconst defaultState: MatrixTableState = {\n  matrix: emptyMatrix,\n  originalMatrix: emptyMatrix,\n}\n\nconst reducer = (state: MatrixTableState, action: MatrixAction): MatrixTableState => {\n  console.log('---action: ', action)\n  switch(action.type) {\n    case 'GET_ALL_DATA':\n      fetch('http://localhost:3000/api/pricing', {\n      method: 'Get',\n      headers: {\n          accept: 'application/json',\n          'content-type': 'application/json'\n      },\n        // body: JSON.stringify(\"dfdfd\")\n      })\n      .then(res => \n        res.json()\n      )\n      .then(data=> {\n        console.log('-----data: ', data)\n        state = data;\n      })\n      .catch(err => console.log('---error', err))\n      console.log('---hree')\n      return data;\n    case 'SET_MATRIX':\n      return {\n        ...state,\n      }\n    case 'SET_ORIGINAL_MATRIX':\n      return {\n        ...state\n      }\n    default:\n      return state\n  }\n}\n\nexport const MatrixTableContext = createContext<[MatrixTableState, import('react').Dispatch<MatrixAction>]>([defaultState, () => {}])\n\n/**\n * This is the provider that hosts the state\n * @param param0 \n */\nexport const MatrixTableContextProvider: import('react').FC<ProviderProps> = ({ initialMatrix, children }) => {\n  const state = useReducer(reducer, { matrix: initialMatrix || emptyMatrix, originalMatrix: initialMatrix || emptyMatrix })\n\n  return (\n    <MatrixTableContext.Provider value={state}>\n      {children}\n    </MatrixTableContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}